name: Update NextDNS Rewrites

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight (UTC)
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  update-rewrites:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Using the latest version

      - name: Query IP addresses and update DNS rewrites
        env:
          NEXTDNS_PROFILE_ID: ${{ secrets.NEXTDNS_PROFILE_ID }}
          NEXTDNS_API_KEY: ${{ secrets.NEXTDNS_API_KEY }}
        run: |
          DOMAINS=("archive.today" "archive.ph" "archive.is")
          DNS_SERVER="1.1.1.1"

          update_dns_rewrite() {
              local domain=$1
              local ip_address=$2

              echo "Checking for existing rewrite entry for ${domain}"

              # Fetch existing rewrites
              existing_rewrite=$(curl -s -X GET "https://api.nextdns.io/profiles/${NEXTDNS_PROFILE_ID}/rewrites" \
                -H "x-api-key: ${NEXTDNS_API_KEY}")
              
              echo "Existing rewrites response: $existing_rewrite"

              # Check if the rewrite already exists
              rewrite_entry=$(echo "$existing_rewrite" | jq -r ".data[] | select(.name == \"${domain}\")")
              rewrite_id=$(echo "$rewrite_entry" | jq -r ".id")
              existing_ip=$(echo "$rewrite_entry" | jq -r ".content")

              echo "Found existing rewrite ID: $rewrite_id with IP: $existing_ip for domain: ${domain}"

              if [[ "$existing_ip" == "$ip_address" ]]; then
                  echo "No change needed for ${domain}, current IP is already ${ip_address}"
                  return
              fi

              if [[ -n "$rewrite_id" && "$rewrite_id" != "null" ]]; then
                  # Delete the existing rewrite
                  echo "Attempting to delete existing rewrite for ${domain} with ID ${rewrite_id}"
                  delete_response=$(curl -sv -X DELETE "https://api.nextdns.io/profiles/${NEXTDNS_PROFILE_ID}/rewrites/${rewrite_id}" \
                    -H "x-api-key: ${NEXTDNS_API_KEY}" 2>&1)

                  echo "Delete response: $delete_response"

                  if [[ "$delete_response" == *"error"* ]] || [[ -z "$delete_response" ]]; then
                      echo "Error deleting rewrite for ${domain}: $delete_response"
                      exit 1
                  fi
                  echo "Successfully deleted rewrite for ${domain}"
              fi

              # Create or re-add the rewrite
              echo "Creating/Updating rewrite for ${domain} with new IP ${ip_address}"
              response=$(curl -sv -X POST "https://api.nextdns.io/profiles/${NEXTDNS_PROFILE_ID}/rewrites" \
                -H "x-api-key: ${NEXTDNS_API_KEY}" \
                -H "Content-Type: application/json" \
                -d "{\"name\":\"${domain}\",\"content\":\"${ip_address}\"}" 2>&1)

              echo "POST response: $response"

              # Check if the response contains errors
              if echo "$response" | jq -e '.errors' > /dev/null; then
                  echo "Error creating/updating rewrite for ${domain}: $response"
                  exit 1
              fi

              echo "Successfully created/updated rewrite for ${domain}"
          }

          # Query DNS server and update rewrites
          for domain in "${DOMAINS[@]}"; do
              echo "Querying IP address for ${domain}"
              ip_address=$(dig +short "${domain}" @"${DNS_SERVER}" | head -n 1)
              
              echo "Found IP address for ${domain}: ${ip_address}"

              if [[ -n "$ip_address" ]]; then
                  update_dns_rewrite "${domain}" "${ip_address}"
              else
                  echo "No IP address found for ${domain} on ${DNS_SERVER}"
              fi
          done
